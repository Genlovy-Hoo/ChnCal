# -*- coding: utf-8 -*-

from __future__ import absolute_import, unicode_literals

import os
import datetime
import pandas as pd
try:
    from ..utils import get_file_path
except:
    from chncal.utils import get_file_path
    
    
constants_template = """# -*- coding: utf-8
    
# this file is generated by:
# chncal.constant_creator.trade_dates.create_trade_dates_constant

from __future__ import absolute_import, unicode_literals

import datetime


# 支持查交易日历的交易所的最早交易日期
# TODO: 目前交易所首个交易日以tushare交易日历数据最早的日期为准，待查证准确的日期
"""

mkt_str = """MARKETS = {
    'SSE': datetime.date(1990, 12, 19),  # 上交所
    'SZSE': datetime.date(1991, 7, 3),  # 深交所
    'CFFEX': datetime.date(2006, 9, 8),  # 中金所
    'SHFE': datetime.date(1991, 5, 28),  # 上期所
    'CZCE': datetime.date(1990, 10, 12),  # 郑商所
    'DCE': datetime.date(1993, 3, 1),  # 大商所
    'INE': datetime.date(2017, 5, 23),  # 上能源
}
"""

trade_date_str = """

trade_dates = {}
"""

MARKETS = None
exec(mkt_str)


def load_ex_trade_dates(ex='SSE'):
    """读取tushare交易日历数据，指定交易所"""
    data_dir = get_file_path('trade_dates', 'data')
    fpath = os.path.join(data_dir, '%s.csv'%ex)
    if not os.path.exists(fpath):
        print('交易所：{}日历数据未找到！'%ex)
        return pd.DataFrame(columns=['exchange', 'date', 'is_open',
                                     'pre_trade_date'])
    df = pd.read_csv(fpath)
    return df


def load_trade_dates():
    """读取tushare交易日历数据，所有交易所"""
    res = []
    for ex in MARKETS:
        res.append(load_ex_trade_dates(ex=ex))
    res = pd.concat(res, axis=0)
    return res


def _get_lines(trade_dates: dict):
    yield '{'
    line = "    ('{}', datetime.date(year={}, month={}, day={})): {},"
    for (ex, date), isopen in trade_dates.items():
        yield line.format(ex, date[:4], int(date[5:7]), int(date[8:]), int(isopen))
    yield '}'


def create_trade_dates_constant():
    trade_dates = load_trade_dates().set_index(['exchange', 'date'])
    trade_dates.sort_index(ascending=True, inplace=True)
    trade_dates = trade_dates['is_open'].to_dict()

    exs_str = '\n'.join(_get_lines(trade_dates))
    file_content = constants_template + mkt_str + trade_date_str.format(exs_str)
    
    trade_path = get_file_path('trade_dates.py')    
    with open(trade_path, 'wb') as f:
        f.write(file_content.encode('utf-8'))


if __name__ == '__main__':
    create_trade_dates_constant()
